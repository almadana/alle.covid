annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes$sp)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
plot_slopes_p=
sim_bb_p %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#4020ab","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
ggsave(plot_slopes_p,file="fig2_scatter_paises.pdf",width=5,height=4)
ggsave(plot_slopes_p,file="fig2_scatter_paisess.png",width=5,height=4)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes$sp)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
ggsave(plot_slopes,file="fig2_scatter_condados.png",width=5,height=4)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
ggsave(fig2,file="fig2.png",width=14,height=9)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
paises<-function(casos.world.264,nCols){
library("segmented")
out<-NULL
par(mfrow=c(10,10), mar=c(2,2,3,0.5 ))
for (i in 1:nrow(casos.world.264)){
#    ii<-which(casos.world.264[i,18:154]>=1) #datos viejos
ii<-which(casos.world.264[i,18:nCols]>=1) #al 10 de julio
if(length(ii)>15){
x<-as.numeric(casos.world.264[i,(ii[1]+17):nCols])
X<-diff(x)
id<-which(X==max(X))[1]
#id<-which(x==max(x))[1]
if(length(14:id)>15 & min(x[14:id])>9 & max(x)>100) {
tt<-I(log10(1:length(x[14:id])))
Infect<-log10(x[14:id])
#plot(Infect~tt ,bty="l", pch=19, col="navy", cex=.8, main=casos.world.264[i,9])
ff0<-lm(Infect~ tt)
ff1<-segmented(obj = lm(Infect~ tt), seg.Z = ~tt, npsi = 1)
aic<-AIC(ff0,ff1)[,2]
wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
N.pais<-casos.world.264[i,13]
p.li<-coefficients(ff0)
p.seg<-coefficients(ff1)
fit<-summary(ff1)
#plot(ff1, add=T, col="red")
bbreak<-which(x>fit$psi[2])[1]
out<-rbind(out,c(i,N.pais, max(x),as.vector(p.seg)[-4],fit$psi[2],wi[2],fit$r.squared))
}
}
}
colnames(out)<-c("Id", "Population", "I.max", "intercept", "initial.slope", "slope.after.thresh", "time.threshold","Weight.evid","R.sqrt")
out
}
###########
#paises(casos.world.264)->b
paises(cases.world,188)->b
head(b)
b<-cbind(b,10^(b[,4]+b[,5]*b[,7]))
#b[,10]<-10^(b[,4]+b[,5]*b[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b[,5], col="navy", border = "gray", main="Initial Slope", xlab="Slope")
text(1.25, 20, "b<1 potential growth rate\nlower than lineal increase")
hist((b[,6]+b[,5]), col="navy", border = "gray", main="Slope After Threshold", xlab="Slope")
text(6, 25, "b>1 potential growth rate\nhigher than lineal")
hist(log10(b[,10]), col="navy", border = "gray", main="Infection Threshold ", xlab="log10(Infected)", breaks=20)
plot(b[,5]~ log10(b[,2]), bty="l", pch=19, col="navy", xlab="Log10(Population)", ylab="Initial Slope")
cases.world
cases.world$Population
paises<-function(casos.world.264,nCols){
library("segmented")
out<-NULL
par(mfrow=c(10,10), mar=c(2,2,3,0.5 ))
for (i in 1:nrow(casos.world.264)){
#    ii<-which(casos.world.264[i,18:154]>=1) #datos viejos
ii<-which(casos.world.264[i,18:nCols]>=1) #al 10 de julio
if(length(ii)>15){
x<-as.numeric(casos.world.264[i,(ii[1]+17):nCols])
X<-diff(x)
id<-which(X==max(X))[1]
#id<-which(x==max(x))[1]
if(length(14:id)>15 & min(x[14:id])>9 & max(x)>100) {
tt<-I(log10(1:length(x[14:id])))
Infect<-log10(x[14:id])
#plot(Infect~tt ,bty="l", pch=19, col="navy", cex=.8, main=casos.world.264[i,9])
ff0<-lm(Infect~ tt)
ff1<-segmented(obj = lm(Infect~ tt), seg.Z = ~tt, npsi = 1)
aic<-AIC(ff0,ff1)[,2]
wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
N.pais<-casos.world.264[i,"Population"]
p.li<-coefficients(ff0)
p.seg<-coefficients(ff1)
fit<-summary(ff1)
#plot(ff1, add=T, col="red")
bbreak<-which(x>fit$psi[2])[1]
out<-rbind(out,c(i,N.pais, max(x),as.vector(p.seg)[-4],fit$psi[2],wi[2],fit$r.squared))
}
}
}
colnames(out)<-c("Id", "Population", "I.max", "intercept", "initial.slope", "slope.after.thresh", "time.threshold","Weight.evid","R.sqrt")
out
}
###########
#paises(casos.world.264)->b
paises(cases.world,188)->b_p
head(b_p)
b_p<-cbind(b_p,10^(b_p[,4]+b_p[,5]*b_p[,7]))
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="navy", border = "gray", main="Initial Slope", xlab="Slope")
text(1.25, 20, "b<1 potential growth rate\nlower than lineal increase")
hist((b_p[,6]+b_p[,5]), col="navy", border = "gray", main="Slope After Threshold", xlab="Slope")
text(6, 25, "b>1 potential growth rate\nhigher than lineal")
hist(log10(b_p[,10]), col="navy", border = "gray", main="Infection Threshold ", xlab="log10(Infected)", breaks=20)
plot(b_p[,5]~ log10(b_p[,2]), bty="l", pch=19, col="navy", xlab="Log10(Population)", ylab="Initial Slope")
abline(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,5]~ log10(b_p[,2]),  col="gray")
plot(b_p[,6]~ log10(b_p[,2]), bty="l", pch=19, col="navy", xlab="Log10(Population)", ylab="Slope after threshold")
#abline(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,6]~ log10(b_p[,2]),  col="gray")
plot(log10(b_p[,10])~ log10(b_p[,2]), bty="l", pch=19, col="navy", xlab="Log10(Population)", ylab="Log(Infection threshold)")
abline(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
text(4.5,3,"Inf.thres.~N^0.42\np:7.8e-12\nr-sqrt:0.19")
points(log10(b_p[,10])~ log10(b_p[,2]),  col="gray")
which.max
which.max(b_p[,"slope.after.thresh"])
b_p[40,]
b_p[40,"Id"]
cases.world[264]
cases.world[264,]
cases.world %>%  filter(UID==108)
library(dplyr)
cases.world %>%  filter(UID==108)
cases.world[108,]
View(bb_p)
b_p=b_p[-108,]
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="navy", border = "gray", main="Initial Slope", xlab="Slope")
text(1.25, 20, "b<1 potential growth rate\nlower than lineal increase")
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="navy", border = "gray", main="Initial Slope", xlab="Slope")
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope")
b_p[108,]
###########
#paises(casos.world.264)->b
paises(cases.world,188)->b_p
b_p<-cbind(b_p,10^(b_p[,4]+b_p[,5]*b_p[,7]))
b_p=b_p[40,]
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope")
###########
#paises(casos.world.264)->b
paises(cases.world,188)->b_p
b_p<-cbind(b_p,10^(b_p[,4]+b_p[,5]*b_p[,7]))
b_p=b_p[-40,]
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope")
hist(log10(b_p[,10]), col="navy", border = "gray", main="Infection Threshold ", xlab="log10(Infected)", breaks=20)
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
paises<-function(casos.world.264,nCols){
library("segmented")
out<-NULL
par(mfrow=c(10,10), mar=c(2,2,3,0.5 ))
for (i in 1:nrow(casos.world.264)){
#    ii<-which(casos.world.264[i,18:154]>=1) #datos viejos
ii<-which(casos.world.264[i,18:nCols]>=1) #al 10 de julio
if(length(ii)>15){
x<-as.numeric(casos.world.264[i,(ii[1]+17):nCols])
X<-diff(x)
id<-which(X==max(X))[1]
#id<-which(x==max(x))[1]
if(length(14:id)>15 & min(x[14:id])>9 & max(x)>100) {
tt<-I(log10(1:length(x[14:id])))
Infect<-log10(x[14:id])
#plot(Infect~tt ,bty="l", pch=19, col="navy", cex=.8, main=casos.world.264[i,9])
ff0<-lm(Infect~ tt)
ff1<-segmented(obj = lm(Infect~ tt), seg.Z = ~tt, npsi = 1)
aic<-AIC(ff0,ff1)[,2]
wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
N.pais<-casos.world.264[i,"Population"]
p.li<-coefficients(ff0)
p.seg<-coefficients(ff1)
fit<-summary(ff1)
#plot(ff1, add=T, col="red")
bbreak<-which(x>fit$psi[2])[1]
id.psi<-which(tt<fit$psi[2])                                              # The following lines estimate the number of active cases at the break point
if(length(id.psi)>9) I.active<-Infect[max(id.psi)]-Infect[max(id.psi)-9]  # If the time series before the break is larger than 10 days retain the total infected 10 days before...
if(length(id.psi)<=9)I.active<-Infect[max(id.psi)]
out<-rbind(out,c(i,N.pais, max(x),as.vector(p.seg)[-4],fit$psi[2],wi[2],fit$r.squared,10^I.active))
}
}
}
colnames(out)<-c("Id", "Population", "I.max", "intercept", "initial.slope", "slope.after.thresh", "time.threshold","Weight.evid","R.sqrt","I.active")
out
}
paises<-function(casos.world.264,nCols){
library("segmented")
out<-NULL
par(mfrow=c(10,10), mar=c(2,2,3,0.5 ))
for (i in 1:nrow(casos.world.264)){
#    ii<-which(casos.world.264[i,18:154]>=1) #datos viejos
ii<-which(casos.world.264[i,18:nCols]>=1) #al 10 de julio
if(length(ii)>15){
x<-as.numeric(casos.world.264[i,(ii[1]+17):nCols])
X<-diff(x)
id<-which(X==max(X))[1]
#id<-which(x==max(x))[1]
if(length(14:id)>15 & min(x[14:id])>9 & max(x)>100) {
tt<-I(log10(1:length(x[14:id])))
Infect<-log10(x[14:id])
#plot(Infect~tt ,bty="l", pch=19, col="navy", cex=.8, main=casos.world.264[i,9])
ff0<-lm(Infect~ tt)
ff1<-segmented(obj = lm(Infect~ tt), seg.Z = ~tt, npsi = 1)
aic<-AIC(ff0,ff1)[,2]
wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
N.pais<-casos.world.264[i,"Population"]
p.li<-coefficients(ff0)
p.seg<-coefficients(ff1)
fit<-summary(ff1)
#plot(ff1, add=T, col="red")
bbreak<-which(x>fit$psi[2])[1]
id.psi<-which(tt<fit$psi[2])                                              # The following lines estimate the number of active cases at the break point
if(length(id.psi)>9) I.active<-Infect[max(id.psi)]-Infect[max(id.psi)-9]  # If the time series before the break is larger than 10 days retain the total infected 10 days before...
if(length(id.psi)<=9)I.active<-Infect[max(id.psi)]
out<-rbind(out,c(i,N.pais, max(x),as.vector(p.seg)[-4],fit$psi[2],wi[2],fit$r.squared,10^I.active))
}
}
}
colnames(out)<-c("Id", "Population", "I.max", "intercept", "initial.slope", "slope.after.thresh", "time.threshold","Weight.evid","R.sqrt","I.active")
out
}
###########
#paises(casos.world.264)->b
paises(cases.world,188)->b_p
b_p<-cbind(b_p,10^(b_p[,4]+b_p[,5]*b_p[,7]))
colnames(b_p)
colnames(b_p)[11]
colnames(b_p)[11]="I.total"
colnames(b_p)
#
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
hist(log10(b_p[,10]), col="navy", border = "gray", main="Infection Threshold ", xlab="log10(Infected)", breaks=20)
b_p=b_p[-40,]
#
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
hist(log10(b_p[,10]), col="navy", border = "gray", main="Infection Threshold ", xlab="log10(Infected)", breaks=20)
#
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
hist(log10(b_p[,10]), col="#4020ab", border = "gray", main="Active infected at breakpoint ", xlab="Log10(Active Cases)", breaks=20)
plot(b_p[,5]~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Initial Slope")
abline(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,5]~ log10(b_p[,2]),  col="gray")
plot(b_p[,6]~ log10(b_p[,2]), bty="l", pch=19, col="navy", xlab="Log10(Population)", ylab="Slope after threshold")
#abline(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,6]~ log10(b_p[,2]),  col="gray")
#
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
hist(log10(b_p[,10]), col="#4020ab", border = "gray", main="Active infected at breakpoint ", xlab="Log10(Active Cases)", breaks=20)
plot(b_p[,5]~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Initial Slope")
abline(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,5]~ log10(b_p[,2]),  col="gray")
plot(b_p[,6]~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Slope after threshold")
#abline(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,6]~ log10(b_p[,2]),  col="gray")
plot(log10(b_p[,10])~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Log(Infection threshold)")
abline(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
text(4.5,3,"Inf.thres.~N^0.42\np:7.8e-12\nr-sqrt:0.19")
#
#b_p[,10]<-10^(b_p[,4]+b_p[,5]*b_p[,7])
par(mfrow=c(2,3), mar=c(4,4,2,2))
hist(b_p[,5], col="#4020ab", border = "gray", main="Initial Slope", xlab="Slope")
hist((b_p[,6]+b_p[,5]), col="#4020ab", border = "gray", main="Slope after threshold", xlab="Slope",10)
hist(log10(b_p[,10]), col="#4020ab", border = "gray", main="Active infected at breakpoint ", xlab="Log10(Active Cases)", breaks=20)
plot(b_p[,5]~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Initial Slope")
abline(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,5]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,5]~ log10(b_p[,2]),  col="gray")
plot(b_p[,6]~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Slope after threshold")
#abline(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(b_p[,6]~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,1.25,"b0~N^0.23\np:1.09e-07")
points(b_p[,6]~ log10(b_p[,2]),  col="gray")
plot(log10(b_p[,10])~ log10(b_p[,2]), bty="l", pch=19, col="#4020ab", xlab="Log10(Population)", ylab="Log(Infection threshold)")
abline(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
summary(lm(log10(b_p[,10])~ log10(b_p[,2])), col="red", lwd=2)
#text(4.5,3,"Inf.thres.~N^0.42\np:7.8e-12\nr-sqrt:0.19")
points(log10(b_p[,10])~ log10(b_p[,2]),  col="gray")
