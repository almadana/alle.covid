)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") #+
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
sim_bb$breakout = sim_bb$cociente>1
sim_bb$breakout_allee.f = interaction(allee.f,breakout)
sim_bb$breakout_allee.f = interaction(sim_bb$allee.f,sim_bb$breakout)
sim_bb$breakout_allee.f
plot_slopes_breakout=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="breakout_allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_breakout=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="breakout_allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b","#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_breakout$yplot = plot_slopes_breakout$yplot + ylim(ylims)
plot_slopes_breakout$yplot
plot_slopes_breakout = plot_slopes_breakout$yplot
plot_slopes_breakout=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="breakout_allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b","#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$yplot = plot_slopes_breakout$yplot
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes_breakout=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="breakout_allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b","#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$yplot = plot_slopes_breakout$yplot
plot_slopes$yplot
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$yplot
plot_slopes=print(plot_slopes)
plot_slopes$yplot
plot_slopes=print(plot_slopes)
plot_slopes$yplot
plot_slopes$xplot
plot_slopes$xplot
plot_slopes$xplot
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") #+
plot_slopes_breakout=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="breakout_allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b","#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$yplot
plot_slopes_breakout$yplot
plot_slopes$yplot = plot_slopes_breakout$yplot
plot_slopes$yplot
plot_slopes$xplot
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$yplot
plot_slopes$xplot
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$xplot
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",0,log10(2)+0.1,"equal slopes")
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0,y=log10(2)+0.1,"equal slopes")
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0,y=log10(2)+0.1,"equal slopes")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0,y=log10(2)+0.1,"equal slopes")
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") #+
annotate("text",x=0,y=log10(2)+0.1,"equal slopes")
plot_slopes$sp
annotate("text",x=0,y=log10(2)+0.1,label="equal slopes")
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0,y=log10(2)+0.1,label="equal slopes")
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0,y=log10(2)+0.1,label="equal slopes",size=2)
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=.5,y=log10(2)+0.1,label="equal slopes",size=2)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
# filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=.5,y=log10(2)+0.1,label="equal slopes",size=2)
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.01,y=log10(2)+0.1,label="equal slopes",size=2)
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.01,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.05,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.02,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=2.5)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
