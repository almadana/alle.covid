<<<<<<< HEAD
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp + scale_shape_manual(values=c(1,4,4))
plot_slopes$sp + scale_shape_manual(values=c(4,4,1))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(1,1,4))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(1,1,8))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(.1,.1,8))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(12,12,8))
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.7,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.7,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(.1,.1,8))
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(1,1,4))
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp + scale_shape_manual(values=c(20,20,1)) +
scale_size_manual(values=c(1,1,4))
plot_slopes$sp + scale_shape_manual(values=c(20,20,20)) +
scale_size_manual(values=c(1,1,4))
plot_slopes$sp + scale_shape_manual(values=c(20,20,20)) +
scale_size_manual(values=c(1,1,1))
plot_slopes$sp + scale_shape_manual(values=c(20,20,20)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(20,20,20)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,1)) +
scale_size_manual(values=c(2,2,2))
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,1)) +
scale_size_manual(values=c(2,2,2))
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,1)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,1)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,4)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
xlims=c(0,.35)
ylims= c(-.01,2)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
#margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(1,1,4)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
#margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(20,20,4)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
#margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
desc(c("oro","plua","jot"))
desc(3,4,1)
desc(c(3,4,1))
?desc
dplyr::desc(c(3,1,5))
bb$allee.f=factor("U.S. counties",levels = c("U.S. counties",levels(cuadrantes$allee.f)))
sim_bb = merge(cuadrantes[,c("Id","n","allee.f","initial.slope","slope.after.thresh","cociente")],bb,by=c("Id","allee.f","initial.slope","slope.after.thresh","cociente"),all=T)
xlims=c(0,.35)
ylims= c(-.01,2)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
mutate(allee.f,forcats::fct_re)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(20,20,4)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
levels(sim_bb$allee.f)
bb$allee.f=factor("U.S. counties",levels = c("U.S. counties",levels(cuadrantes$allee.f)))
bb$allee.f
cuadrantes$allee.f
sim_bb = merge(cuadrantes[,c("Id","n","allee.f","initial.slope","slope.after.thresh","cociente")],bb,by=c("Id","allee.f","initial.slope","slope.after.thresh","cociente"),all=T)
sim_bb$allee.f
sim_bb$allee.f=relevel(sim_bb$allee.f,"U.S. counties")
sim_bb$allee.f
xlims=c(0,.35)
ylims= c(-.01,2)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(20,20,4)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#b33018","#14b74b","#000080"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(4,2,2))
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(4,2,2))+scale_alpha_manual(values=c(.6,.3,.3))
plot_slopes$sp
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(4,2,2))+scale_alpha_manual(values=c(.5,.3,.3))
plot_slopes$sp
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3))
plot_slopes$sp
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+slope after threshold/initial slope)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") #+
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
rm(ls())
rm(~ls())
rm(list=ls())
getwd()
setwd("/Users/mariainesfariello/Documents/COVID local/Datos/")
=======
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
library(ggpubr)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
plotsPaises
plotsCondados
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ggforce)
library(ggrepel)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
sessionInfo()
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3))
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = 2)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = -2)
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = -2)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = .1)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados ,
plot_slopes ,
plotsPaises,
plot_slopes_p ,
widths = c(4,3),
labels = "AUTO")
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados ,
plot_slopes ,
plotsPaises,
plot_slopes_p ,
widths = c(4,3),
labels = "auto")
ggsave(fig2,file="fig2.pdf",width=14,height=9)
ggsave(fig2,file="fig2.png",width=14,height=9)
library(tidyr)
library(ggplot2)
library(reshape)
library(dplyr)
library(gridExtra)
library(cowplot)
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
equilibriumPoints <- which(aR < 1)
point1 <- which(diff(equilibriumPoints) == max(diff(equilibriumPoints)))
point2 <- equilibriumPoints[point1+1]
equilibriumDf <- data.frame(Infected = c(point1, point2), R = c(1, 1),
type = c("unstable", "stable"))
arrowDf <- data.frame(Ii = c(point1 - 30, point1 + 100, Npop - 100),
If = c(-60, point2 - 200, point2 + 100),
direction = c("left", "right", "left"),
R = 1.15)
thresholdText <- c("Epidemic \nthreshold")
immunityText <- c("Population \nimmunity")
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3,hjust="inward") +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3,hjust="inward",size=6) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=4,hjust="inward") +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=4,hjust="inward") +
annotate("text",x=point2,y=0.7,label=immunityText,size=4,hjust="inward") +
#  geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
#           hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
ggsave("allee1D.pdf", allee1D, width = 15, height = 9, units = "cm")
ggsave("allee1D.png", allee1D, width = 15, height = 9, units = "cm")
sampleRepetitions
nPlotDyn
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 2) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(segmented)
library(gridExtra)
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 2) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
plotsDynAlleeSM
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE & rep %in% sampleRepetitions) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 2) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
plotsDynAlleeSM
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE & rep %in% sampleRepetitions) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 5) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
plotsDynAlleeSM
#plotsDynNonAllee <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
plotsDynNonAlleeSM <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#14b74b") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 2) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("without Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="green")
#plotsDynNonAllee <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
plotsDynNonAlleeSM <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#14b74b") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 5) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("without Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="green")
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,nrow = 1)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", dynsPlots, width = 6, height = 8)
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,ncol = 1)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", dynsPlots, width = 6, height = 8)
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,ncol = 1)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", dynsPlots, width = 6, height = 8)
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,ncol = 1,nrow=2)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", dynsPlots, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", fig_sim_SM, width = 6, height = 8)
nPlotDynsm=40
sampleRepetitionsSM <- sample(unique(simulations$rep), nPlotDynSM)
nPlotDynSM=40
sampleRepetitionsSM <- sample(unique(simulations$rep), nPlotDynSM)
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE & rep %in% sampleRepetitionsSM) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 4) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
#plotsDynNonAllee <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
plotsDynNonAlleeSM <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitionsSM) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#14b74b") +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 4) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("without Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="green")
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,ncol = 2,nrow=1)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", fig_sim_SM, width = 6, height = 8)
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE & rep %in% sampleRepetitionsSM) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018",size=.6) +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 4) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
xlab("time (days)",size=10) +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5,size=8),
text = element_text(size=5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
plotsDynAlleeSM <- dplyr::filter(simulations_fit, allee == TRUE & rep %in% sampleRepetitionsSM) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#b33018",size=.6) +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 4) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
#ylab("Cumulative infected") +
xlab(element_text("time (days)",size=10)) +
ylab(element_text("Cumulative infected",size=10)) +
ggtitle("with Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5,size=8),
text = element_text(size=5)) +
geom_line(aes(x=t,y=cumI_fit),color="pink")
#plotsDynNonAllee <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitions) %>%
plotsDynNonAlleeSM <- dplyr::filter(simulations_fit, allee == FALSE & rep %in% sampleRepetitionsSM) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#14b74b",size=.6) +
#  facet_wrap(~rep, scales = "free", ncol = 4) +
facet_wrap(~rep, scales = "free", ncol = 4) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
scale_y_continuous(limits = c(10, NA), trans = "log10") +
#xlab("time (days)",size=10) +
#ylab("Cumulative infected") +
xlab(element_text("time (days)",size=10)) +
ylab(element_text("Cumulative infected",size=10)) +
ggtitle("without Allee effect") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5,size=8),
text = element_text(size=5)) +
geom_line(aes(x=t,y=cumI_fit),color="green")
fig_sim_SM = ggarrange(plotsDynAlleeSM,plotsDynNonAlleeSM,ncol = 2,nrow=1)
ggsave("simDynamics_SM.png", fig_sim_SM, width = 6, height = 8)
ggsave("simDynamics_SM.pdf", fig_sim_SM, width = 6, height = 8)
bb
hist(Weight.evid)
hist(bb$Weight.evid)
hist(bb$Weight.evid,50)
hist(bb$Weight.evid,100)
table(bb$Weight.evid>.99)
prop.table(table(bb$Weight.evid>.99))
View(bb)
>>>>>>> 64e8ec47534326d8c723fb6e0d37bb262b0475f6
