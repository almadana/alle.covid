ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
#  labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
labs(x=expression(paste(Log10, "(", 1+mu[1], ")")),
y=expression(paste(Log10, "(", 1+frac(mu[1],mu[2]), ")")))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes)
#N=round(10^rnorm(nRepeats,pob_paises[1],pob_paises[2]))  #valores para paises
N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para condados
N
nRepeats = 1000
alleeCoefs = c(F,T)
pob_condados = c(4.49,0.68)
pob_paises = c(6.66,1.07)
#N=round(10^rnorm(nRepeats,pob_paises[1],pob_paises[2]))  #valores para paises
N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para condados
#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.7
nRows=length(alleeCoefs)*length(subExpCoefs)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
cuadrantes
cuadrantes =
cuadrantes %>%
unnest(fit)  %>%
group_by(n) %>%
mutate(coef=c(paste0("coef.",1:5),paste0("t.",1:(n()-6)),"I.active")) %>% #View()
spread(key=coef,value  = fit) %>%
rowwise() %>%
mutate(coef.4 = coef.2+coef.3,
cociente = coef.4/coef.2,
resta=coef.4 - coef.2,
angle = atan(abs((coef.4 - coef.2)/(1-coef.4*coef.2))),
infec.Corte=ifelse(is.null(coef.5),NA,coef.1 + coef.4*coef.5))
cuadrantes %>% group_by(allee.f,subexp.f) %>%
summarize_at(c("cociente","resta","angle"),.funs = list("median"=median,"iqr"=IQR),na.rm=T)
# cuadrantes %>% ggplot(aes(x=log(cociente),fill=allee.f)) + geom_histogram() + facet_grid(rows = "allee.f~subexp.f",)
#
# cuadrantes %>% ggplot(aes(y=log(cociente),x=log(1+coef.2),col=allee.f)) + geom_point(alpha=.2)+
#   facet_wrap(~subexp.f)+
#   labs(x="log(1+initial slope)",y="log(second slope/first slope)")
#
# cuadrantes %>% ggplot(aes(y=coef.4,x=coef.2,col=allee.f)) + geom_point(alpha=.5)+
#   facet_wrap(~subexp.f)+
#   labs(x="log(first slope)",y="log(second slope)")
#
cuadrantes$allee.f = factor(cuadrantes$allee.f)
colnames(cuadrantes)[c(8,10)]
colnames(cuadrantes)[c(8,10)]=c("initial.slope","slope.after.thresh")
cuadrantes=cuadrantes %>%  filter(initial.slope>0)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
#  labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
labs(x=expression(paste(Log10, "(", 1+mu[1], ")")),
y=expression(paste(Log10, "(", 1+frac(mu[1],mu[2]), ")")))
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes
save(cuadrantes,file="simulados_allee_condados.RData")
plot_slopes=print(plot_slopes)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
ggsave(plot_slopes,file="fig2_scatter_condados.png",width=5,height=4)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
#labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
labs(x=expression(paste(Log10, "(", 1+mu[1], ")")),
y=expression(paste(Log10, "(", 1+frac(mu[1],mu[2]), ")")))
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
ggsave(plot_slopes_p,file="fig2_scatter_paises.pdf",width=5,height=4)
ggsave(plot_slopes_p,file="fig2_scatter_paisess.png",width=5,height=4)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
plotsPaises
plot_slopes
pplot_slopes_p
plot_slopes_p
plot_slopes
plot_slopes_p
plotsCondados
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
plot_slopes
plot_slopes=print(plot_slopes)
plot_slopes_p=print(plot_slopes_p)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
plot_slopes_p=
sim_bb_p %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#4020ab","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
#labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
labs(x=expression(paste(Log10, "(", 1+mu[1], ")")),
y=expression(paste(Log10, "(", 1+frac(mu[1],mu[2]), ")")))
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
library(ggpubr)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
plotsPaises
plotsCondados
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ggforce)
library(ggrepel)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
sessionInfo()
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3))
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = 2)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = -2)
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = -2)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"),widths = c(4,3),vjust = .1)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados ,
plot_slopes ,
plotsPaises,
plot_slopes_p ,
widths = c(4,3),
labels = "AUTO")
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
fig2 = ggarrange(plotsCondados ,
plot_slopes ,
plotsPaises,
plot_slopes_p ,
widths = c(4,3),
labels = "auto")
ggsave(fig2,file="fig2.pdf",width=14,height=9)
ggsave(fig2,file="fig2.png",width=14,height=9)
library(tidyr)
library(ggplot2)
library(reshape)
library(dplyr)
library(gridExtra)
library(cowplot)
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
equilibriumPoints <- which(aR < 1)
point1 <- which(diff(equilibriumPoints) == max(diff(equilibriumPoints)))
point2 <- equilibriumPoints[point1+1]
equilibriumDf <- data.frame(Infected = c(point1, point2), R = c(1, 1),
type = c("unstable", "stable"))
arrowDf <- data.frame(Ii = c(point1 - 30, point1 + 100, Npop - 100),
If = c(-60, point2 - 200, point2 + 100),
direction = c("left", "right", "left"),
R = 1.15)
thresholdText <- c("Epidemic \nthreshold")
immunityText <- c("Population \nimmunity")
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, #color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3,hjust="inward") +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain", ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=3,hjust="inward",size=6) +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=4,hjust="inward") +
geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
allee1D <- ggplot(rdf, aes(x = Infected, y = R, color = model)) +
geom_line(size = 1) +
scale_color_manual(values = c("#b33018", "#14b74b"), name = "SIR Model",
labels = c("with Allee effect", "without Allee effect")) +
geom_hline(yintercept = 1, size = 1, linetype = "dashed") +
geom_segment(aes(x = point1, xend = point1, y = 0, yend = 2), color = "red",
linetype = "dashed") +
xlab("Proportion infected") +
ylab(bquote('Reproductive number ' ~R[e] )) +
geom_point(data = equilibriumDf, size = 4, color = "black") +
geom_segment(data = dplyr::filter(arrowDf, direction == "right"),
aes(x = Ii, xend = If, y = R, yend = R), color = "#fa3d1b",
arrow = arrow(length = unit(0.3, "cm")), size = 1.1) +
geom_segment(data = dplyr::filter(arrowDf, direction == "left"),
aes(x = Ii, xend = If, y = R, yend = R), color =  "#243faf",
arrow = arrow(length = unit(0.3, "cm"), ends = "last"),
size = 1.1) +
#geom_text(aes(x = point1+50, y = 0.7), label = thresholdText, color = "black",
#hjust = "inward", family = "sans", fontface = "plain", ) +
annotate("text",x=point1+50,y=0.7,label=thresholdText,size=4,hjust="inward") +
annotate("text",x=point2,y=0.7,label=immunityText,size=4,hjust="inward") +
#  geom_text(aes(x = point2, y = 0.7), label = immunityText, color = "black",
#           hjust = "inward", family = "sans", fontface = "plain" ) +
theme_classic() +scale_x_continuous(labels = c(0,.25,.5,.75,1)) +
theme(legend.position = c(.7,.7),text=element_text(size=12))
allee1D
ggsave("allee1D.pdf", allee1D, width = 15, height = 9, units = "cm")
ggsave("allee1D.png", allee1D, width = 15, height = 9, units = "cm")
