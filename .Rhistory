select(Id,Province_State,Country_Region,starts_with("X")) %>%
pivot_longer(starts_with("X")) %>%
filter(value>0) %>%
mutate(t=1:n(),peak = which.max(diff(value))[1]) %>%
filter(t>14,t<=peak) %>%
mutate(t=t-14) %>%
ungroup() %>% rowwise() %>%
mutate(Province_State = ifelse(Province_State %in% "",levels(Country_Region)[Country_Region],levels(Province_State)[Province_State]))
colnames(country_data)[c(3,6)]
colnames(country_data)[c(3,6)] = c("country","cumI")
#bb_p sale de plotPaises, que a su vez sale de segmented_paises (convierte el ajuste b en un tible bb_p, corrije segunda pendiente y agrega cociente para plotear)
country_data_fit = merge(country_data,bb_p,by="Id")
colnames(country_data_fit)[14]
colnames(country_data_fit)[14]="breakPoint"
country_data_fit =
country_data_fit %>% mutate(t_bp = ceiling(10^breakPoint),cumI_fit = ifelse(t<10^breakPoint, 10^(intercept + log10(t)*initial.slope),10^(intercept - log10(t_bp)*slope.after.thresh +log10(t_bp-1)*initial.slope +log10(t)*slope.after.thresh )))
#los condados con más y con menos quiebre:
nExamples=5 # cuantos de cada
country_examples =
c(
country_data_fit %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_max(cociente,n=nExamples) %>% pull(Id)
,
country_data_fit %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_min(cociente,n=nExamples) %>% pull(Id)
)
country_examples
unique(country_data_fit$country[ country_data_fit$Id %in% country_examples])
#
plotsPaises <- dplyr::filter(country_data_fit, Id %in% country_examples) %>%
#plotsPaises <- dplyr::filter(country_data_fit, Id %in% c(166,39)) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#008080") +
facet_wrap(~Id, scales = "free", ncol = 5) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
#scale_y_continuous(limits = c(10, NA), trans = "log10") +
scale_y_continuous(trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("Countries") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="blue")
plotsPaises
country_examples =
c(
country_data_fit %>% filter(cociente>1) %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_max(cociente,n=nExamples) %>% pull(Id)
,
country_data_fit %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_min(cociente,n=nExamples) %>% pull(Id)
)
country_examples =
c(
country_data_fit %>% filter(cociente>1) %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_max(cociente,n=nExamples) %>% pull(Id)
,
country_data_fit %>% filter(cociente>1) %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_min(cociente,n=nExamples) %>% pull(Id)
)
country_examples
unique(country_data_fit$country[ country_data_fit$Id %in% country_examples])
#
plotsPaises <- dplyr::filter(country_data_fit, Id %in% country_examples) %>%
#plotsPaises <- dplyr::filter(country_data_fit, Id %in% c(166,39)) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#008080") +
facet_wrap(~Id, scales = "free", ncol = 5) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
#scale_y_continuous(limits = c(10, NA), trans = "log10") +
scale_y_continuous(trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("Countries") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="blue")
plotsPaises
country_data_fit =
country_data_fit %>% mutate(t_bp = floor(10^breakPoint),cumI_fit = ifelse(t<10^breakPoint, 10^(intercept + log10(t)*initial.slope),10^(intercept - log10(t_bp)*slope.after.thresh +log10(t_bp-1)*initial.slope +log10(t)*slope.after.thresh )))
#los condados con más y con menos quiebre:
nExamples=5 # cuantos de cada
country_examples =
c(
country_data_fit %>% filter(cociente>1) %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_max(cociente,n=nExamples) %>% pull(Id)
,
country_data_fit %>% filter(cociente>1) %>% group_by(Id) %>% slice(1) %>% ungroup() %>%
slice_min(cociente,n=nExamples) %>% pull(Id)
)
country_examples
unique(country_data_fit$country[ country_data_fit$Id %in% country_examples])
#
plotsPaises <- dplyr::filter(country_data_fit, Id %in% country_examples) %>%
#plotsPaises <- dplyr::filter(country_data_fit, Id %in% c(166,39)) %>%
ggplot(., aes(x = t, y = cumI)) +
geom_point(color = "#008080") +
facet_wrap(~Id, scales = "free", ncol = 5) +
scale_x_continuous(breaks = c(1, 5, 25), trans = "log10") +
#scale_y_continuous(limits = c(10, NA), trans = "log10") +
scale_y_continuous(trans = "log10") +
xlab("time (days)") +
#ylab("Cumulative infected") +
ylab(element_blank()) +
ggtitle("Countries") +
theme_classic() +
theme(strip.background = element_blank(), strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5)) +
geom_line(aes(x=t,y=cumI_fit),color="blue")
plotsPaises
cuadrantes_paises
plot_slopes
plot_slopes$sp + geom_density_2d_filled(geom="raster")
plot_slopes$sp + geom_density_2d_filled()
plot_slopes$sp
plot_slopes
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)+theme_classic() +
theme(legend.position = "top")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp + geom_density_2d_filled()
plot_slopes$sp + geom_density_2d(geom="raster")
plot_slopes$sp + stat_density_2d(geom="raster")
plot_slopes$sp + stat_density_2d(geom="point",n = 20)
plot_slopes$sp + stat_density_2d(geom="point",n = 200)
plot_slopes$sp + stat_density_2d(geom="raster",n = 200)
plot_slopes$sp + stat_density_2d(geom="point",n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="point",aes(alpha=after_stat(density)),n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="point",aes(alpha=after_stat(density),color=allee.f),n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="point",aes(,color=allee.f),n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="point",aes(color=allee.f),n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="point",aes(color=allee.f),n = 200,countour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(color=allee.f,alpha=after_stat(density)),countour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(color=allee.f,size=after_stat(density)),countour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(color=allee.f,size=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(color=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=F)+scale_alpha_continuous()
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",shape=20,aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)+theme_classic() +
theme(legend.position = "top")
plot_slopes$sp + stat_density_2d(geom="raster",shape=20,aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))#+scale_alpha_manual(values=c(.5,.3,.3)) +
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+#scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)+theme_classic() +
theme(legend.position = "top")
plot_slopes$sp + stat_density_2d(geom="raster",shape=20,aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=T)
F
plot_slopes$sp + stat_density_2d(geom="raster",aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=after_stat(density)),contour=F)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..,contour=F)
=*)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=F)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = plot_slopes$sp + scale_shape_manual(values=c(4,20,20)) +
scale_size_manual(values=c(2,2,2))+#scale_alpha_manual(values=c(.5,.3,.3)) +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)+theme_classic() +
theme(legend.position = "top")
plot_slopes$sp
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=F)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=4)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=6)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10)
nrow(cuadrantes)
cuadrantes %>% filter(cociente>1) %>% ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente)))
cuadrantes %>% filter(cociente>1) %>% ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10)
plot_slopes$sp + stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=12)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=10) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b"))
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b"))
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic()
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none")
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)
plot_slopes$sp = cuadrantes %>% #filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp
plot_slopes
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)
plot_slopes
ylims
xlims=c(0,.35)
ylims= c(-.01,2)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb,alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=bb%>% filter(cociente>1),alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims)
plot_slopes=print(plot_slopes)
bb%>% filter(cociente>1)
bb%>% filter(cociente>1) %>% View()
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=(bb%>% filter(cociente>1)),alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "none") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims)
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes
plot_slopes$sp = cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=4,data=(bb%>% filter(cociente>1)),alpha=1,col="#000080")+
scale_fill_manual(values = c("#000080","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point",y="log10(1+slope after/slope before)")
plot_slopes
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes=print(plot_slopes)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
