#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.8
nRows=length(alleeCoefs)*length(subExpCoefs)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
cuadrantes
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
library(tidyr)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
#for(i in 1:200){
generador <- function(p_se,allee,N) {
rm(.Random.seed, envir=globalenv())
dyn.sub.exp.Allee.SIR(I0=10, bet=0.8, gam=3 , p=p_se, t=100,  migration=1, size=0.2, I50=10, K=N, Allee = allee )->al
imp<-cumsum(al[,5])  # cumulative number of imported cases
al<-cumsum(al[,4])   # cumulative number of cases
I.min<-which(al>9)
al<-al[I.min]
I.max<-which(al<0.8*1000)
al<-al[I.max]
print(length(al))
al<-al[which(al>10 & al<2500)]
imp<-imp[which(al>10 & al<2500)]
#al<-al[which(al>10 )]
#imp<-imp[which(al>10 )]
if(length(al)>10){
#    plot(log10(al)~log10(I(1:length(al))), bty="l", pch=19, col="darkgreen", main="")
#plot(log10(al)~(I(1:length(al))), bty="l", pch=19, col="darkgreen", main="")
y<-log10(al)
z<-log10(imp)
x<-log10(1:length(y))
#  x<-(1:length(y))
#  points(z~log10(I(1:length(al))), bty="l", pch=19, col="gold", main="", cex=.8)
#ff0<-lm(y~x)
ff1<-segmented(lm(y~x), seg.Z = ~x, npsi = 1)
#aic<-AIC(ff0,ffp, ff1)[,2]
#wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
cfs = summary(ff1)
#plot(ff1, add=T, col="red")
return(c(cfs$coefficients[,1],ifelse(is.null(cfs$psi),NA,cfs$psi[2]),al))
#  plot(ff1, add=T, col="red")
}
}
#N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para paises
N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para condados
#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.8
nRows=length(alleeCoefs)*length(subExpCoefs)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ggforce)
library(ggrepel)
dyn.sub.exp.Allee.SIR<-function(I0, bet=1.3, gam=5, p, t, Allee, migration, size, I50, K){
out<-matrix(0, nrow = t, ncol=5)
colnames(out)<-c("S","I","R", "New.I", "Imported")
out[1,]<-c(K,I0,0,0,0)
N<-K+I0
for(i in 2:t){
if(out[i-1,2]<=0)out[i-1,2]<-out[i,2]<-0
if(out[i-1,1]<=0)out[i-1,1]<-out[i,1]<-0
if(Allee==T){
new.I<-(bet*(out[i-1,1]*(out[i-1,2])^p)/N)*(out[i-1,2]/(out[i-1,2]+I50))
if(out[i-1,2]>0){
rec.I<-(1/(gam*(out[i-1,2]/(out[i-1,2]+I50))))*out[i-1,2]
} else {rec.I<-0}
}
if(Allee==F){
new.I<-(bet*(out[i-1,1]*(out[i-1,2])^p)/N)
rec.I<-(1/gam)*out[i-1,2]
}
rec.I<-rnbinom(n = 1, size = size, mu = rec.I)
rec.I<-min(out[i-1,2],rec.I, na.rm=T)
imported<-rnbinom(n = 1, size = size, mu = migration)
#        new.I<-rnbinom(n = 1, size = size, mu = new.I)
new.I<-rpois(n = 1, lambda  = new.I)
new.I<-min(new.I,out[i-1,2])        # ensure no more new infections than susceptible
out[i,]<-c(out[i-1,1]-new.I, out[i-1,2]+new.I-rec.I+imported,out[i-1,3]+rec.I, new.I, imported)
}
out
}
p_se=1 # sin subexponencial
#p_se=0.8 # subexponencial
allee=T
par(mfrow=c(10,10), mar=c(1.5,1.5,0.5,0.5 ))
#for(i in 1:200){
generador <- function(p_se,allee,N) {
rm(.Random.seed, envir=globalenv())
dyn.sub.exp.Allee.SIR(I0=10, bet=0.8, gam=3 , p=p_se, t=100,  migration=1, size=0.2, I50=10, K=N, Allee = allee )->al
imp<-cumsum(al[,5])  # cumulative number of imported cases
al<-cumsum(al[,4])   # cumulative number of cases
I.min<-which(al>9)
al<-al[I.min]
I.max<-which(al<0.8*1000)
al<-al[I.max]
print(length(al))
al<-al[which(al>10 & al<2500)]
imp<-imp[which(al>10 & al<2500)]
#al<-al[which(al>10 )]
#imp<-imp[which(al>10 )]
if(length(al)>10){
#    plot(log10(al)~log10(I(1:length(al))), bty="l", pch=19, col="darkgreen", main="")
#plot(log10(al)~(I(1:length(al))), bty="l", pch=19, col="darkgreen", main="")
y<-log10(al)
z<-log10(imp)
x<-log10(1:length(y))
#  x<-(1:length(y))
#  points(z~log10(I(1:length(al))), bty="l", pch=19, col="gold", main="", cex=.8)
#ff0<-lm(y~x)
ff1<-segmented(lm(y~x), seg.Z = ~x, npsi = 1)
#aic<-AIC(ff0,ffp, ff1)[,2]
#wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
cfs = summary(ff1)
#plot(ff1, add=T, col="red")
return(c(cfs$coefficients[,1],ifelse(is.null(cfs$psi),NA,cfs$psi[2]),al))
#  plot(ff1, add=T, col="red")
}
}
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(segmented)
library(ggforce)
nRepeats = 1000
alleeCoefs = c(F,T)
pob_condados = c(5.27,0.46)
pob_paises = c(16.3,1.57)
#N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para paises
N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para condados
N=round(10^rnorm(nRepeats,pob_paises[1],pob_paises[2]))  #valores para paises
#N=round(10^rnorm(nRepeats,pob_condados[1],pob_condados[2]))  #valores para condados
#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.8
nRows=length(alleeCoefs)*length(subExpCoefs)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
cuadrantes =
cuadrantes %>%
unnest(fit)  %>%
group_by(n) %>%
mutate(coef=c(paste0("coef.",1:5),paste0("t.",1:(n()-5)))) %>% #View()
spread(key=coef,value  = fit) %>%
rowwise() %>%
mutate(coef.4 = coef.2+coef.3,
cociente = coef.4/coef.2,
resta=coef.4 - coef.2,
angle = atan(abs((coef.4 - coef.2)/(1-coef.4*coef.2))),
infec.Corte=ifelse(is.null(coef.5),NA,coef.1 + coef.4*coef.5))
cuadrantes %>% group_by(allee.f,subexp.f) %>%
summarize_at(c("cociente","resta","angle"),.funs = list("median"=median,"iqr"=IQR),na.rm=T)
# cuadrantes %>% ggplot(aes(x=log(cociente),fill=allee.f)) + geom_histogram() + facet_grid(rows = "allee.f~subexp.f",)
#
# cuadrantes %>% ggplot(aes(y=log(cociente),x=log(1+coef.2),col=allee.f)) + geom_point(alpha=.2)+
#   facet_wrap(~subexp.f)+
#   labs(x="log(1+initial slope)",y="log(second slope/first slope)")
#
# cuadrantes %>% ggplot(aes(y=coef.4,x=coef.2,col=allee.f)) + geom_point(alpha=.5)+
#   facet_wrap(~subexp.f)+
#   labs(x="log(first slope)",y="log(second slope)")
#
cuadrantes$allee.f = factor(cuadrantes$allee.f)
# cuadrantes %>% mutate_at(c("coef.2","coef.3","cociente"),.funs = list("log"=function(x) log(1+x))) %>%
# ggscatterhist(x="coef.2_log",y="cociente_log",
#   color="allee.f",alpha=0.6,size=3,
#   margin.plot="boxplot",
#   ggtheme=theme_bw(),
#   xlab="log(1+initial slope)",
#   ylab="log(1+final slope / initial slope)"
# )
colnames(cuadrantes)[c(8,10)]=c("initial.slope","slope.after.thresh")
cuadrantes=cuadrantes %>%  filter(initial.slope>0)
cuadrantes_paises = cuadrantes
sim_bb_p = merge(cuadrantes_paises[,c("Id","n","allee.f","initial.slope","slope.after.thresh","cociente")],bb_p,by=c("Id","allee.f","initial.slope","slope.after.thresh","cociente"),all=T)
cuadrantes_paises$Id=seq(10000,10000+nrow(cuadrantes_paises)-1,1)
sim_bb_p = merge(cuadrantes_paises[,c("Id","n","allee.f","initial.slope","slope.after.thresh","cociente")],bb_p,by=c("Id","allee.f","initial.slope","slope.after.thresh","cociente"),all=T)
sim_bb_p$allee.f=relevel(sim_bb_p$allee.f,"Countries & regions")
sim_bb_p$breakout = sim_bb_p$cociente>1
sim_bb_p$breakout_allee.f = interaction(sim_bb_p$allee.f,sim_bb_p$breakout)
sim_bb_p$label=NA
sim_bb_p=sim_bb_p %>% mutate(label=ifelse(Id %in% country4,country,label))
xlims=c(0,.7)
ylims= c(-.01,3)
plot_slopes_p=
sim_bb_p %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#4020ab","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_p$sp = cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,col="#4020ab")+
scale_fill_manual(values = c("#4020ab","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
xlims=c(0,.5)
plot_slopes_p=
sim_bb_p %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#4020ab","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_p$sp = cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,col="#4020ab")+
scale_fill_manual(values = c("#4020ab","#b33018","#14b74b")) + theme_classic() +
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
ggsave(plot_slopes_p,file="fig2_scatter_paises.pdf",width=5,height=4)
ggsave(plot_slopes_p,file="fig2_scatter_paisess.png",width=5,height=4)
plot_slopes
plot_slopes_p$sp = cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#4020ab","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes$sp)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
plot_slopes_p=
sim_bb_p %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#4020ab","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes_p$sp =
cuadrantes_paises %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb_p%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#4020ab","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2),linetype="dotted") +
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
geom_text_repel(data=sim_bb_p,aes(label=label),size=3)+
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes_p$sp$labels$colour=""
plot_slopes_p$sp$labels$fill=""
plot_slopes_p$sp$labels$shape=""
plot_slopes_p$sp$labels$size=""
plot_slopes_p$sp$labels$alpha=""
plot_slopes_p$yplot=plot_slopes_p$yplot + ylim(ylims)
plot_slopes_p$xplot=plot_slopes_p$xplot + ylim(xlims)
plot_slopes_p$sp = plot_slopes_p$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes_p=print(plot_slopes_p)
ggsave(plot_slopes_p,file="fig2_scatter_paises.pdf",width=5,height=4)
ggsave(plot_slopes_p,file="fig2_scatter_paisess.png",width=5,height=4)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes$sp)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
plot_slopes=
sim_bb %>% mutate_at(vars(contains("slope"),"cociente"),.funs = list("log10"=function(x) log10(1+x))) %>%
#filtra a los que no tiene quiebre de pendientes positivo (ratio mayor a uno)
filter(cociente>1) %>%
ggscatterhist(x="initial.slope_log10",y="cociente_log10",
#color="bajoUmbral",
color="allee.f",
fill="allee.f",
shape="allee.f",
size="allee.f",
#                alpha="allee.f",
group="allee.f",
alpha=.4,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+slope before breakout point)",
ylab="log10(1+slope after/slope before)",
palette = c("#000080","#b33018","#14b74b"),
ylim=ylims,
xlim=xlims
)
plot_slopes$sp =
cuadrantes %>% filter(cociente>1) %>%
ggplot(aes(group=allee.f,fill=allee.f,x=log10(1+initial.slope),y=log10(1+cociente))) +
stat_density_2d(geom="polygon",aes(fill=allee.f,alpha=..level..),contour=T,bins=14) +
geom_point(shape=20,data=(bb%>% filter(cociente>1)),alpha=1,aes(col=allee.f))+
scale_fill_manual(values = c("#FFFFFF","#b33018","#14b74b")) + theme_classic() +
scale_color_manual(values=c("#000080","#b33018","#14b74b"))+
theme(legend.position = "top") +
geom_abline(slope=0,intercept = log10(2)-.1,linetype="dotted") +
geom_text_repel(data=sim_bb,aes(label=label),size=3)+
annotate("text",x=0.03,y=log10(2)+0.1,label="equal slopes",size=3) +
xlim(xlims) + ylim(ylims) +
labs(x="log10(1+slope before breakout point)",y="log10(1+slope after/slope before)")
plot_slopes$sp$labels$colour=""
plot_slopes$sp$labels$fill=""
plot_slopes$sp$labels$shape=""
plot_slopes$sp$labels$size=""
plot_slopes$sp$labels$alpha=""
plot_slopes$yplot=plot_slopes$yplot + ylim(ylims)
plot_slopes$xplot=plot_slopes$xplot + ylim(xlims)
plot_slopes$sp = plot_slopes$sp + guides(alpha="none",shape="none",colour="none")
plot_slopes=print(plot_slopes)
ggsave(plot_slopes,file="fig2_scatter_condados.pdf",width=5,height=4)
ggsave(plot_slopes,file="fig2_scatter_condados.png",width=5,height=4)
fig2 = ggarrange(plotsCondados + labs(tag="a"),
plot_slopes + labs(tag="b"),
plotsPaises+labs(tag="c"),
plot_slopes_p + labs(tag="d"))
fig2
ggsave(fig2,file="fig2.pdf",width=14,height=9)
ggsave(fig2,file="fig2.png",width=14,height=9)
ggsave(fig2,file="fig2.pdf",width=14,height=9)
