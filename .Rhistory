#plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(x))) %>%
ggscatterhist(x="coef.2_log10",y="coef.4_log10",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+final slope)",
palette = c("#ff9e47","#14b74b")
)
#plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="log10(1+initial slope)",
ylab="log10(1+final slope)",
palette = c("#ff9e47","#14b74b")
)
#plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes
ggsave(plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
rnorm(1,0,1)
rnorm(1,0,1)
rnorm(1,0,1)
N=round(10^rnorm(nRepeats,5.27,0.46))  #valores para condados
N
alleeCoefs = c(F,T)
N=round(10^rnorm(nRepeats,5.27,0.46))  #valores para condados
#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.8
nRows=length(alleeCoefs)*length(subExpCoefs)
repeat(c(0,4),2)
rep(c(0,4),2)
nRepeats
nRows
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,nRows))
View(cuadrantes)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
#for(i in 1:200){
generador <- function(p_se,allee,N) {
rm(.Random.seed, envir=globalenv())
dyn.sub.exp.Allee.SIR(I0=10, bet=0.8, gam=3 , p=p_se, t=100,  migration=1, size=0.2, I50=10, K=N, Allee = allee )->al
imp<-cumsum(al[,5])  # cumulative number of imported cases
al<-cumsum(al[,4])   # cumulative number of cases
I.min<-which(al>9)
al<-al[I.min]
I.max<-which(al<0.8*1000)
al<-al[I.max]
print(length(al))
al<-al[which(al>10 & al<2500)]
imp<-imp[which(al>10 & al<2500)]
#al<-al[which(al>10 )]
#imp<-imp[which(al>10 )]
if(length(al)>10){
plot(log10(al)~log10(I(1:length(al))), bty="l", pch=19, col="darkgreen", main="")
y<-log10(al)
z<-log10(imp)
x<-log10(1:length(y))
#  points(z~log10(I(1:length(al))), bty="l", pch=19, col="gold", main="", cex=.8)
#ff0<-lm(y~x)
ff1<-segmented(lm(y~x), seg.Z = ~x, npsi = 1)
#aic<-AIC(ff0,ffp, ff1)[,2]
#wi<-exp(-0.5*(aic-min(aic)))/sum(exp(-0.5*(aic-min(aic))))
cfs = summary(ff1)
plot(ff1, add=T, col="red")
return(c(cfs$coefficients[,1],ifelse(is.null(cfs$psi),NA,cfs$psi[2])))
#  plot(ff1, add=T, col="red")
}
}
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
nRepeats = 2000
N=round(10^rnorm(nRepeats,5.27,0.46))  #valores para condados
#subExpCoefs = c(0.8,1) #con y sin subexp
subExpCoefs = 0.8
nRows=length(alleeCoefs)*length(subExpCoefs)
cuadrantes = tibble(n=seq(1,nRows*nRepeats),
allee=rep(alleeCoefs,nRows/length(alleeCoefs)*nRepeats),
allee.f = ifelse(allee,"with Allee effect","without Allee effect"),
subexp = rep(subExpCoefs,each=nRows/length(subExpCoefs)*nRepeats),subexp.f = ifelse(subexp<1,"with subexp. growth","without subexp. growth"),
N=rep(N,each=nRows))
cuadrantes = cuadrantes %>% rowwise() %>%
# mutate(modelo=list(generador(subexp,allee)),fit=list(coef(modelo,include.psi=T)))
mutate(fit=list(generador(subexp,allee,N)))
cuadrantes
cuadrantes =
cuadrantes %>%
unnest(fit)  %>%
group_by(n) %>%
mutate(coef=paste0("coef.",1:n())) %>%
spread(key=coef,value  = fit) %>%
rowwise() %>%
mutate(cociente = coef.3/coef.2,resta=coef.3 - coef.2,
angle = atan(abs((coef.3 - coef.2)/(1-coef.3*coef.2))),
coef.4 = coef.2+coef.3,
infec.Corte=ifelse(is.null(coef.5),NA,coef.1 + coef.4*coef.5))
cuadrantes %>% group_by(allee.f,subexp.f) %>%
summarize_at(c("cociente","resta","angle"),.funs = list("median"=median,"iqr"=IQR),na.rm=T)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes
cuadrantes$allee.f = factor(cuadrantes$allee.f)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes
abline(0,1)
plot_slopes
plot_slopes+ geom_abline(0,1)
plot_slopes + geom_abline(aes(0,1))
plot_slopes + geom_abline(slope = 1,intercept = 0)
plot_slopes
plot_slopes[1]
plot_slopes[2]
plot_slopes$sp
plot_slopes$layers
names(plot_slopes)
names(plot_slopes$layers)
names(plot_slopes$facet)
names(plot_slopes$plot_env)
plot_slopes$plot_env$p
plot_slopes$plot_env$plot
plot_slopes$sp
plots <- ggscatterhist(iris, x = "Sepal.Length", y = "Sepal.Width", print = FALSE)
plots$sp <- plots$sp +
geom_hline(yintercept = 3, linetype = "dashed", color = "blue") +
geom_vline(
xintercept = 6, linetype = "dashed", color = "red")
plots
plot_slopes =
ggscatterhist(cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))),x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes
plot_slopes$sp + geom_abline(slope = 1,intercept = 0)
plots <- ggscatterhist(iris, x = "Sepal.Length", y = "Sepal.Width", print = FALSE)
plots$sp <- plots$sp +
geom_hline(yintercept = 3, linetype = "dashed", color = "blue") +
geom_vline(xintercept = 6, linetype = "dashed", color = "red")
plots
plots <- ggscatterhist(iris, x = "Sepal.Length", y = "Sepal.Width", print = FALSE)
plots
plots$sp
version
save.image()
install.packages(c("ggplot2", "ggpubr"))
install.packages(c("ggplot2", "ggpubr"))
install.packages(c("ggplot2", "ggpubr"))
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(segmented)
View(cuadrantes)
#filtrar casos con muy poco slope inicial y mucho final - cociente>5000
cuadrantes=cuadrantes %>%  filter(cociente<5000,cociente>0)
cuadrantes %>% ggplot(aes(x=log(cociente),fill=interaction(allee.f,subexp.f))) + geom_histogram(alpha=.3) + facet_wrap(~subexp.f*allee.f)
cuadrantes %>% ggplot(aes(x=log(cociente),fill=allee)) + geom_histogram()
cuadrantes %>% ggplot(aes(x=resta,fill=allee.f)) + geom_histogram() + facet_grid(rows = "allee.f~subexp.f")
cuadrantes %>% ggplot(aes(x=log(cociente),fill=allee.f)) + geom_histogram() + facet_grid(rows = "allee.f~subexp.f",)
cuadrantes %>% ggplot(aes(y=log(cociente),x=log(1+coef.2),col=allee.f)) + geom_point(alpha=.2)+
facet_wrap(~subexp.f)+
labs(x="log(1+initial slope)",y="log(second slope/first slope)")
cuadrantes %>% ggplot(aes(y=coef.4,x=coef.2,col=allee.f)) + geom_point(alpha=.5)+
facet_wrap(~subexp.f)+
labs(x="log(first slope)",y="log(second slope)")
cuadrantes$allee.f = factor(cuadrantes$allee.f)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes + geom_abline(slope = 1,intercept = 0)
plot_slopes$sp
plot_slopes$sp+geom_abline(slope=1,intercept = 0)
plot_slopes$sp <-plot_slopes$sp+geom_abline(slope=1,intercept = 0)
plot_slopes
plot_slopes$sp$labels
plot_slopes$sp$labels$colour
plot_slopes$sp$labels$colour=""
plot_slopes
ggsave(plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
ggsave(plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
ggsave(plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
plot_slopes$sp <-plot_slopes$sp+geom_abline(slope=1,intercept = 0)
plot_slopes$sp$labels$colour=""
plot_slopes
ggsave(plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
ggsave(plot=plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
class(plot_slopes)
plot_slopes =
cuadrantes %>% mutate_at(c("coef.2","coef.4"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="coef.2",y="coef.4",
color="allee.f",alpha=.3,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b")
)
class(plot_slopes)
plot_slopes
plot_slopes[1]
plot_slopes[[1]]
plot_slopes[[2]]
plot_slopes[[3]]
plot_slopes
print(plot_slopes)
a=print(plot_slopes)
class(a)
ggsave(a,filename = "fig1_slopes.pdf",height = 4,width = 5)
plot_slopes$sp <-plot_slopes$sp+geom_abline(slope=1,intercept = 0)
plot_slopes$sp$labels$colour=""
plot_slopes
print_plot_slopes = print(plot_slopes)
print_plot_slopes
ggsave(print_plot_slopes,filename = "fig1_slopes.pdf",height = 4,width = 5)
save(cuadrantes,file="simulados_allee.RData")
plot_bbp_slopes
plot_bbp_slopes=
bb_p %>% mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="#000080",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
#palette = "#000080",
palette = c("#ff9e47","#14b74b","#000080"),
#                ylim=c(0,15),
#               xlim=c(0,2)
)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(segmented)
library(ggforce)
bb_p
bb_p=as_tibble(b)
colnames(cuadrantes)[c(8,10)]=c("initial.slope","slope.after.thresh")
plot_bbp_slopes=
bb_p %>% mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="#000080",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
#palette = "#000080",
palette = c("#ff9e47","#14b74b","#000080"),
#                ylim=c(0,15),
#               xlim=c(0,2)
)
plot_bbp_slopes$sp = plot_bbp_slopes$sp +
stat_chull(data=cuadrantes_paises,aes(fill=allee.f),alpha=0.5,geom="polygon") +
geom_abline(intercept = 0,slope = 1)
plot_bbp_slopes$sp$labels$colour=""
plot_bbp_slopes$yplot = plot_bbp_slopes$yplot + ylim(c(0,12))
plot_bbp_slopes
plot_bbp_slopes
bb=as_tibble(b)
bb$bajoUmbral = factor(bb$I.active<10)
bb %>%
ggplot(aes(x=slope.after.thresh,fill=bajoUmbral))+geom_histogram(bins = 20,position = "identity",alpha=.5)
bb %>%
ggplot(aes(x=initial.slope,fill=bajoUmbral))+geom_histogram(bins = 20,position = "identity",alpha=.5)
bb %>% group_by(bajoUmbral) %>% summarize(m=mean(slope.after.thresh),mx=max(slope.after.thresh))
#                 ylab="slope after threshold",
#                 palette = c("#ff9e47","#14b74b"),
#                 ylim=c(0,15),
#                 xlim=c(0,2)
#   )
# plot_slopes$sp <-plot_slopes$sp+geom_abline(slope=1,intercept = 0)
# plot_slopes$sp$labels$colour=""
# plot_slopes
#
#
plot_bb_slopes=
bb %>% mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="#000080",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
#palette = "#000080",
palette = c("#ff9e47","#14b74b","#000080"),
#                ylim=c(0,15),
#               xlim=c(0,2)
)
plot_bb_slopes$sp = plot_bb_slopes$sp +
stat_chull(data=cuadrantes_paises,aes(fill=allee.f),alpha=0.5,geom="polygon") +
geom_abline(intercept = 0,slope = 1)
plot_bb_slopes$sp$labels$colour=""
plot_bb_slopes$yplot = plot_bb_slopes$yplot + ylim(c(0,12))
plot_bb_slopes
colnames(cuadrantes)[c(8,10)]=c("initial.slope","slope.after.thresh")
colnames(bb)
cuadrantes$Id=seq(10000,10000+nrow(cuadrantes)-1,1)
bb$allee.f="counties"
sim_bb = merge(cuadrantes[,c("Id","n","allee.f","initial.slope","slope.after.thresh")],bb,by=c("Id","allee.f","initial.slope","slope.after.thresh"),all=T)
View(sim_bb)
plot_slopes=
sim_bb %>% #mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="allee.f",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
palette = c("#ff9e47","#14b74b","#000080"),
ylim=c(0,15),
xlim=c(0,2)
)
plot_slopes$sp <-plot_slopes$sp+geom_abline(slope=1,intercept = 0) +
stat_chull(data=cuadrantes,aes(fill=allee.f),alpha=0.1,geom="polygon")
plot_slopes$sp$labels$colour=""
plot_slopes
plot_ch = bb %>%
gggplot(aes(x=initial.slope,y=slope.after.thresh)) + geom_mark_hull()
plot_ch = bb %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh)) + geom_mark_hull()
install.packages("concaveman")
install.packages("concaveman")
install.packages("units")
install.packages("units")
install.packages("concaveman")
install.packages("sf")
install.packages("sf")
plot_ch = bb %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh)) + geom_mark_hull()
install.packages("concaveman")
plot_ch = bb %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh)) + geom_mark_hull()
plot_ch
plot_ch = bb %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull()
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull()
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,expand = 2)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,expand = .1)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,expand = .5)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,expand = .2)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,concavity = 3)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,concavity = 5,)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(alpha=.2,concavity = 5,)
plot_ch
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(concavity = 5,)
plot_ch = cuadrantes %>%
ggplot(aes(x=initial.slope,y=slope.after.thresh,fill=allee.f)) + geom_mark_hull(concavity = 5)
plot_ch
plot_bb_slopes$sp = plot_bb_slopes$sp +
stat_chull(data=cuadrantes_paises,aes(fill=allee.f),alpha=0.5,geom="polygon") +
geom_abline(intercept = 0,slope = 1)
plot_bbp_slopes
load('cuadrantes_paises.RData')
plot_bbp_slopes=
bb_p %>% mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="#000080",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
#palette = "#000080",
palette = c("#ff9e47","#14b74b","#000080"),
#                ylim=c(0,15),
#               xlim=c(0,2)
)
plot_bbp_slopes$sp = plot_bbp_slopes$sp +
stat_chull(data=cuadrantes_paises,aes(fill=allee.f),alpha=0.5,geom="polygon") +
geom_abline(intercept = 0,slope = 1)
plot_bbp_slopes$sp$labels$colour=""
plot_bbp_slopes$yplot = plot_bbp_slopes$yplot + ylim(c(0,12))
plot_bbp_slopes
plot_bbp_slopes=
bb_p %>% mutate_at(c("initial.slope","slope.after.thresh"),.funs = list("log10"=function(x) log10(1+x))) %>%
ggscatterhist(x="initial.slope",y="slope.after.thresh",
#color="bajoUmbral",
color="#000080",
alpha=.4,size=3,
margin.plot="boxplot",
ggtheme=theme_bw(),
xlab="initial slope",
ylab="slope after threshold",
#palette = "#000080",
palette = c("#ff9e47","#14b74b","#000080"),
#                ylim=c(0,15),
#               xlim=c(0,2)
)
plot_bbp_slopes$sp = plot_bbp_slopes$sp +
stat_chull(data=cuadrantes_paises,aes(fill=allee.f),alpha=0.5,geom="polygon") +
geom_abline(intercept = 0,slope = 1)
plot_bbp_slopes$sp$labels$colour=""
plot_bbp_slopes$yplot = plot_bbp_slopes$yplot + ylim(c(0,12))
plot_bbp_slopes
nrow(bb_p)
nrow(bb)
